S1 = [3, 2, 6, 12, 10, 0, 1, 11, 13, 14, 10, 4, 6, 0, 15, 5]
S2 = [4, 11, 4, 4, 4, 15, 9, 12, 12, 5, 12, 12, 12, 1, 7, 4]
S3 = [11, 10, 12, 2, 2, 11, 13, 14, 5, 6, 4, 14, 14, 5, 3, 2]
S4 = [5, 9, 13, 2, 11, 10, 12, 5, 11, 7, 3, 14, 5, 6, 4, 11]
S5 = [3, 0, 11, 8, 13, 14, 13, 11, 13, 0, 5, 8, 3, 2, 3, 5]
S6 = [8, 13, 12, 12, 3, 15, 12, 7, 8, 3, 4, 4, 13, 1, 4, 9]
S7 = [4, 2, 9, 13, 10, 12, 10, 7, 12, 14, 7, 3, 6, 4, 6, 9]
S8 = [10, 2, 5, 5, 3, 13, 15, 1, 6, 14, 11, 11, 13, 3, 1, 15]


def h_func(x1, x2, x3, x4):
    a = (x1 + x2) & 15
    b = (x2 + x3) & 15
    c = (x3 + x4) & 15
    d = (x4 + x1) & 15

    s1a = S1[a]
    s2b = S2[b]
    s3c = S3[c]
    s4d = S4[d]

    tmp1 = S5[(x1 + s2b + s3c) & 15]
    tmp2 = S6[(x2 + s3c + s4d) & 15]
    tmp3 = S7[(x3 + s4d + s1a) & 15]
    tmp4 = S8[(x4 + s1a + s2b) & 15]

    return (tmp1 + tmp2 + tmp3 + tmp4) & 15

# print(h_func(7, 11, 2, 10))
# print(h_func(7, 3, 2, 10))
test_key = [
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
]
# tmp_index = [0, 174, 184, 149, 217, 11, 46, 49, 159, 80, 15, 73, 86, 185, 77, 104, 119, 211, 176, 221, 144, 84, 170, 183, 200, 60, 224, 28, 83, 167, 220, 52, 203, 228, 153, 141, 215, 150, 4, 252, 17, 107, 75, 241, 14, 130, 116, 105, 129, 63, 124, 135, 112, 102, 201, 249, 161, 26, 198, 186, 180, 156, 106, 166, 96, 57, 126, 219, 205, 31, 209, 85, 137, 3, 134, 108, 55, 247, 5, 172, 12, 27, 136, 76, 242, 138, 132, 240, 58, 44, 181, 2, 117, 147, 109, 45, 177, 120, 95, 204, 145, 10, 47, 54, 7, 87, 197, 251, 171, 50, 64, 92, 214, 155, 123, 56, 222, 235, 115, 142, 157, 216, 154, 226, 227, 121, 193, 253, 152, 178, 146, 158, 232, 190, 148, 20, 66, 103, 160, 62, 118, 8, 13, 231, 212, 21, 43, 18, 243, 125, 81, 32, 179, 223, 207, 192, 67, 239, 93, 173, 248, 30, 51, 24, 89, 238, 131, 94, 88, 29, 250, 41, 36, 254, 78, 33, 246, 48, 9, 182, 244, 34, 71, 143, 40, 234, 133, 196, 233, 162, 230, 99, 151, 79, 98, 175, 127, 97, 53, 188, 65, 245, 165, 168, 236, 169, 122, 100, 210, 113, 42, 110, 25, 229, 163, 128, 72, 74, 213, 206, 191, 202, 237, 59, 38, 70, 114, 101, 22, 68, 69, 16, 140, 187, 39, 225, 199, 82, 1, 139, 90, 208, 195, 37, 218, 164, 91, 189, 111, 61, 6, 35, 19, 23, 255, 194]
# tmp_value = [0, 14, 8, 5, 9, 11, 14, 1, 15, 0, 15, 9, 6, 9, 13, 8, 7, 3, 0, 13, 0, 4, 10, 7, 8, 12, 0, 12, 3, 7, 12, 4, 11, 4, 9, 13, 7, 6, 4, 12, 1, 11, 11, 1, 14, 2, 4, 9, 1, 15, 12, 7, 0, 6, 9, 9, 1, 10, 6, 10, 4, 12, 10, 6, 0, 9, 14, 11, 13, 15, 1, 5, 9, 3, 6, 12, 7, 7, 5, 12, 12, 11, 8, 12, 2, 10, 4, 0, 10, 12, 5, 2, 5, 3, 13, 13, 1, 8, 15, 12, 1, 10, 15, 6, 7, 7, 5, 11, 11, 2, 0, 12, 6, 11, 11, 8, 14, 11, 3, 14, 13, 8, 10, 2, 3, 9, 1, 13, 8, 2, 2, 14, 8, 14, 4, 4, 2, 7, 0, 14, 6, 8, 13, 7, 4, 5, 11, 2, 3, 13, 1, 0, 3, 15, 15, 0, 3, 15, 13, 13, 8, 14, 3, 8, 9, 14, 3, 14, 8, 13, 10, 9, 4, 14, 14, 1, 6, 0, 9, 6, 4, 2, 7, 15, 8, 10, 5, 4, 9, 2, 6, 3, 7, 15, 2, 15, 15, 1, 5, 12, 1, 5, 5, 8, 12, 9, 10, 4, 2, 1, 10, 14, 9, 5, 3, 0, 8, 10, 5, 14, 15, 10, 13, 11, 6, 6, 2, 5, 6, 4, 5, 0, 12, 11, 7, 1, 7, 2, 1, 11, 10, 0, 3, 5, 10, 4, 11, 13, 15, 13, 6, 3, 3, 7, 15, 2]
#
# flag = 1
# for i in range(len(tmp_index)):
#     if tmp_value[i] == test_key[tmp_index[i]]:
#         continue
#     else:
#         print(i, tmp_value[i], test_key[tmp_index[i]])
#         flag = 0
#         break
# print(flag)
# import math
# print(math.log(5,2))
# print(math.log(3,2))

poss_diff = []
for j in range(16):
    out_diff_ = []
    for i in range(16):
        i_diff = i ^ 1
        output_diff = ((i+j)&15) ^ ((i_diff+j)&15)
        out_diff_.append(output_diff)
        if output_diff not in poss_diff:
            poss_diff.append(output_diff)
    print(out_diff_)
print(poss_diff)